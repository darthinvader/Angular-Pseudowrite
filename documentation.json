{
    "pipes": [],
    "interfaces": [
        {
            "name": "Book",
            "id": "interface-Book-8523e17faceff1bddaa9aa12d2f23cb12dc8cbccd27083b03711e1c4b37c1a0292fe11e1ca3e470b2176ddacaf04868093ca8e016d697d8deea8a8814d67ae93",
            "file": "src/app/book-explorer/book-explorer.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BookCardComponent } from './book-card/book-card.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nexport interface Book {\n  title: string,\n  imgUrl?: string,\n  imgTitle?: string\n}\n\n@Component({\n  selector: 'app-book-explorer',\n  standalone: true,\n  imports: [\n    CommonModule, BookCardComponent, FontAwesomeModule\n  ],\n  templateUrl: './book-explorer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BookExplorerComponent {\n  @Input() books: Book[] = []\n  faPlus = faPlus\n}\n",
            "properties": [
                {
                    "name": "imgTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "imgUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-64ff0b9bc5918fc86599541b760b9a24087c7f3ec851f9261eefeac2c6e95aa1b4116fd603a484c76b143d5dc8820d9d2822396ebe3456981d0af46cce668700",
            "file": "src/services/auth.service.ts",
            "properties": [
                {
                    "name": "afAuth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularFireAuth",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "isLoggedIn",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "onAuthStateChanged",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "EventEmitter<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "signInWithGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "signOutGoogle",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { EventEmitter, Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport firebase from 'firebase/compat/app';\r\nimport { LocalStorageService } from './storage-service.service';\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  isLoggedIn: boolean = false;\r\n  onAuthStateChanged: EventEmitter<boolean> = new EventEmitter();\r\n  constructor(public afAuth: AngularFireAuth, private localStorage: LocalStorageService) {\r\n    this.isLoggedIn = this.localStorage.getItem('user')\r\n    this.afAuth.authState.subscribe(\r\n      (user) => {\r\n        if (user) {\r\n          this.localStorage.setItem('user', true);\r\n          this.isLoggedIn = true;\r\n        } else {\r\n          this.localStorage.setItem('user', false);\r\n          this.isLoggedIn = false;\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n  async signInWithGoogle() {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    try {\r\n      const result = await this.afAuth.signInWithPopup(provider);\r\n      return result;\r\n    } catch (error) {\r\n      console.error(error);\r\n      return null;\r\n    }\r\n    this.onAuthStateChanged.emit(true); // Emit event after login\r\n  }\r\n  async signOutGoogle() {\r\n    await this.afAuth.signOut()\r\n    this.onAuthStateChanged.emit(false); // Emit event after logout\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "localStorage",
                        "type": "LocalStorageService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "afAuth",
                        "type": "AngularFireAuth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "localStorage",
                        "type": "LocalStorageService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "LocalStorageService",
            "id": "injectable-LocalStorageService-23ddc74baaa63425813a0ce5c6925b9d0aa5133b28a159fed0ad042450ecc50030f6e7fac182bb4d95756103cfe27fa21bd330fa07d316ecb140db5ce9396b9a",
            "file": "src/services/storage-service.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setItem",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\n\n  setItem(key: string, value: any): void {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n  }\n\n  getItem(key: string): any {\n    if (isPlatformBrowser(this.platformId)) {\n      const item = localStorage.getItem(key);\n      return item ? JSON.parse(item) : null;\n    }\n    return null;\n  }\n\n  removeItem(key: string): void {\n    if (isPlatformBrowser(this.platformId)) {\n      localStorage.removeItem(key);\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "platformId",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "platformId",
                        "type": "Object",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AboutComponent",
            "id": "component-AboutComponent-42568c707ebe8500ee90c6ed595a0bc4af9e8d1a1e41c2301c969f31e0a4b8bf23a4beadf6783a66cbcfd819551ca35a38f4346d8fb5d3746f1acf88640000db",
            "file": "src/app/about/about.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-about",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./about.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faBook",
                    "defaultValue": "faBook",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "faBrain",
                    "defaultValue": "faBrain",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "faRobot",
                    "defaultValue": "faRobot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "faUsers",
                    "defaultValue": "faUsers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faRobot, faCircleNotch, faBrain, faUsers, faBook } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-about',\n  standalone: true,\n  imports: [\n    CommonModule, FontAwesomeModule\n  ],\n  styleUrl: './about.component.scss',\n  templateUrl: './about.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AboutComponent {\n  faRobot = faRobot;\n  faBrain = faBrain\n  faUsers = faUsers\n  faBook = faBook\n}\n",
            "styleUrl": "./about.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bg-gradient-to-r from-blue-500 to-purple-600 text-white p-6 rounded-lg shadow-xl animate-fadeIn\">\n  <h1 class=\"text-4xl font-bold mb-6 flex items-center animate-pulse\">\n    <fa-icon [icon]=\"faRobot\" class=\"text-3xl mr-3 animate-spin\"></fa-icon>\n    About PseudoWrite 📘✍️\n  </h1>\n  <div class=\"space-y-4\">\n    <p class=\"flex items-center animate-slideInLeft\">\n      <fa-icon [icon]=\"faBook\" class=\"text-xl mr-2 animate-bounce\"></fa-icon>\n      Welcome to PseudoWrite, where your writing journey is assisted by cutting-edge AI technology. Our platform offers unique tools to help authors at every stage of their writing process, from brainstorming ideas to polishing final drafts.\n    </p>\n    <p class=\"flex items-center animate-slideInRight\">\n      <fa-icon [icon]=\"faBrain\" class=\"text-xl mr-2 animate-wiggle\"></fa-icon>\n      Our AI-driven features provide personalized suggestions, plot development ideas, character insights, and much more, helping you overcome writer's block and enhance your storytelling.\n    </p>\n    <p class=\"flex items-center animate-slideInLeft\">\n      <fa-icon [icon]=\"faUsers\" class=\"text-xl mr-2\"></fa-icon>\n      Whether you're a seasoned author or just starting, PseudoWrite is here to support your creative journey. Embrace the future of writing with PseudoWrite, where every story finds its voice.\n    </p>\n  </div>\n</div>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-135bad75b91c90e25c806680b04e00013b925a3cbe41712a3efd89babc45ebf0601c1f32b183aad2859d29505b29b2a5b9ca84b69e18761f4bf1ec252bba088b",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'angular-pseudowrite'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "EditorComponent",
                    "type": "component"
                },
                {
                    "name": "ProjectComponent",
                    "type": "component"
                },
                {
                    "name": "LoginComponent",
                    "type": "component"
                },
                {
                    "name": "BackgroundComponent",
                    "type": "component"
                },
                {
                    "name": "HomeComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { EditorComponent } from './editor/editor.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BackgroundComponent } from './background/background.component';\r\nimport { HomeComponent } from './home/Home.component';\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterOutlet, EditorComponent, ProjectComponent, LoginComponent, BackgroundComponent, HomeComponent],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.scss'\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-pseudowrite';\r\n}\r\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-background></app-background>\r\n<app-home></app-home>\r\n"
        },
        {
            "name": "BackgroundComponent",
            "id": "component-BackgroundComponent-210929d754ff785e4258a92d8d5d492f6e840f610ea9675b3ac54b1e01efb93501a60bdb64c878e907a710f25a2b66e408fd88b105a3541f89077664a3b0a28b",
            "file": "src/app/background/background.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-background",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./background.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'app-background',\n  standalone: true,\n  imports: [\n    CommonModule,\n  ],\n  templateUrl: './background.component.html',\n  styleUrl: './background.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BackgroundComponent { }\n",
            "styleUrl": "./background.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"container\">\n  <div class=\"stars\">\n    @for(_ of [].constructor(50); track $index){\n      <div class=\"star\"></div>\n    }\n  </div>\n</div>"
        },
        {
            "name": "BookCardComponent",
            "id": "component-BookCardComponent-77a62f2c8c12d3be8fc281ec020a752b157d2c65627a1e53135b2706a427dc095ade78374b538f411ee64534f937e79f49271aca863e107bb9373301157a8e21",
            "file": "src/app/book-explorer/book-card/book-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./book-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "book",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "Book | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faTrashAlt",
                    "defaultValue": "faTrashAlt",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "onDelete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Book } from '../book-explorer.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-book-card',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FontAwesomeModule, // Import FontAwesomeModule\n  ],\n  templateUrl: './book-card.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BookCardComponent {\n  @Input() book: Book | null = null;\n  faTrashAlt = faTrashAlt; // Icon property\n\n  onDelete() { }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"max-w rounded overflow-hidden shadow-lg cursor-pointer transform hover:scale-105 transition duration-200 ease-in-out\">\n  <div class=\"flex flex-col justify-between h-full\">\n    <div class=\"p-5 flex justify-center align-middle text-center\">\n      <div class=\"font-bold text-3xl mb-2\">{{ book?.title }}</div>\n    </div>\n    <button class=\"...\" (click)=\"onDelete()\"> <!-- Add your Tailwind CSS classes here -->\n      <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Delete\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "BookEditorComponent",
            "id": "component-BookEditorComponent-403cba37fb267c575981e3908e48df151c3ded2d337a6c777386ea12ec0c7432c754b54331366d2d54b2fb3cb6e617096e504e2c34ee29b94360d0588ac8dfd8",
            "file": "src/app/book-editor/book-editor.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./book-editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ProjectComponent",
                    "type": "component"
                },
                {
                    "name": "EditorComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ProjectComponent } from '../project/project.component';\nimport { EditorComponent } from '../editor/editor.component';\n@Component({\n  selector: 'app-book-editor',\n  standalone: true,\n  imports: [\n    CommonModule, ProjectComponent, EditorComponent\n  ],\n  styleUrl: './book-editor.component.scss',\n  templateUrl: './book-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BookEditorComponent { }\n",
            "styleUrl": "./book-editor.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"grid-container h-full gap-6 m-4\">\n  <div>\n    <app-project></app-project>\n  </div>\n  <div>\n    <app-editor></app-editor>\n  </div>\n  <div class=\"flex flex-col gap-2  \">\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Generate Chapter</button>\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Generate Character</button>\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Generate Beat</button>\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Generate Building</button>\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Generate Item</button>\n    <button class=\"w-full text-sm px-6 py-2 bg-opacity-90 bg-gray-800 text-gray-200 rounded shadow hover:bg-gray-200 hover:text-gray-800 hover:shadow-lg focus:outline-none transition ease-in-out duration-300\">Rewrite</button>\n  </div>\n</div>\n"
        },
        {
            "name": "BookExplorerComponent",
            "id": "component-BookExplorerComponent-8523e17faceff1bddaa9aa12d2f23cb12dc8cbccd27083b03711e1c4b37c1a0292fe11e1ca3e470b2176ddacaf04868093ca8e016d697d8deea8a8814d67ae93",
            "file": "src/app/book-explorer/book-explorer.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-book-explorer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./book-explorer.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "books",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Book[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faPlus",
                    "defaultValue": "faPlus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "BookCardComponent",
                    "type": "component"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BookCardComponent } from './book-card/book-card.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nexport interface Book {\n  title: string,\n  imgUrl?: string,\n  imgTitle?: string\n}\n\n@Component({\n  selector: 'app-book-explorer',\n  standalone: true,\n  imports: [\n    CommonModule, BookCardComponent, FontAwesomeModule\n  ],\n  templateUrl: './book-explorer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BookExplorerComponent {\n  @Input() books: Book[] = []\n  faPlus = faPlus\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bg-white p-8 rounded-lg\">\n  <div class=\"flex justify-evenly\"> \n    <div class=\"text-3xl text-center\">Your Books</div>\n    <button class=\"flex gap-2 justify-center align-middletext-sm px-6 py-2 bg-opacity-90 bg-gray-50 text-gray-800 rounded-lg shadow hover:bg-gray-200 focus:outline-none transition ease-in-out duration-300\">\n      <fa-icon [icon]=\"faPlus\"></fa-icon>Create New Book</button>\n  </div>\n  <div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-6 m-4 bg-transparent rounded-lg\">\n    @for(book of books; track book.title){\n      <app-book-card [book]=\"book\"></app-book-card>\n    }\n    @empty {\n    <div>No books available.</div>\n    }\n  </div>\n</div>"
        },
        {
            "name": "EditorComponent",
            "id": "component-EditorComponent-4c2de3f0897c642860f904b8fe9222c7a5a845fd893e057c655663721ccc2b0f6248f2668ace86d78ac8cf488ae14de6353232e772dda663dd5ddf3ba3c24509",
            "file": "src/app/editor/editor.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-editor",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./editor.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "editorConfig",
                    "defaultValue": "editorConfig",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "AngularEditorConfig",
                    "decorators": []
                },
                {
                    "name": "htmlContent",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "htmlContentChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "giveDifferentWording",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "performRequest",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveContent",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                },
                {
                    "name": "AngularEditorModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "HttpClientModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { AngularEditorConfig, AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nconst toolbarHiddenButtons = [\r\n  [\r\n    'subscript',\r\n    'superscript',\r\n  ],\r\n  [\r\n    'fontSize',\r\n    'textColor',\r\n    'backgroundColor',\r\n    'customClasses',\r\n    'link',\r\n    'unlink',\r\n    'insertImage',\r\n    'insertVideo',\r\n    'insertHorizontalRule',\r\n    'toggleEditorMode'\r\n  ]\r\n]\r\n\r\nconst editorConfig: AngularEditorConfig = {\r\n  editable: true,\r\n  spellcheck: true,\r\n  height: 'calc(100vh - 100px)',\r\n  minHeight: '0',\r\n  maxHeight: 'auto',\r\n  width: 'auto',\r\n  minWidth: '0',\r\n  translate: 'yes',\r\n  enableToolbar: true,\r\n  showToolbar: true,\r\n  placeholder: 'Write Chapter Here...',\r\n  defaultFontName: 'roboto',\r\n  fonts: [\r\n    { class: 'roboto', name: 'Roboto' },\r\n    { class: 'arial', name: 'Arial' },\r\n    { class: 'times-new-roman', name: 'Times New Roman' },\r\n  ],\r\n  sanitize: true,\r\n  toolbarPosition: 'top',\r\n  toolbarHiddenButtons: toolbarHiddenButtons,\r\n};\r\n@Component({\r\n  selector: 'app-editor',\r\n  standalone: true,\r\n  imports: [CommonModule, HttpClientModule, AngularEditorModule, FormsModule, HttpClientModule],\r\n  templateUrl: './editor.component.html',\r\n  styleUrl: './editor.component.scss',\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class EditorComponent {\r\n  @Input() htmlContent = ''\r\n  @Input() editorConfig = editorConfig\r\n  @Output() htmlContentChange = new EventEmitter();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  saveContent() {\r\n    // Emitting the current htmlContent\r\n    this.htmlContentChange.emit(this.htmlContent);\r\n  }\r\n\r\n  performRequest() {\r\n    const url = 'http://localhost:1234/v1/chat/completions';\r\n\r\n    if (window.getSelection) {\r\n      let selection = window.getSelection();\r\n      const body = {\r\n        messages: [\r\n          { role: 'system', content: 'Always answer in rhymes.' },\r\n          { role: 'user', content: selection?.toString() }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: -1,\r\n        stream: false\r\n      };\r\n      return this.http.post(url, body, { headers: { 'Content-Type': 'application/json' } }).subscribe((object => console.log(object)));\r\n    }\r\n    return null\r\n  }\r\n  giveDifferentWording() {\r\n    const url = 'http://localhost:1234/v1/chat/completions';\r\n\r\n    if (window.getSelection) {\r\n      let selection = window.getSelection();\r\n      const body = {\r\n        messages: [\r\n          { role: 'system', content: 'Reword the specific message, do not say anything before or after the rewording.' },\r\n          { role: 'user', content: selection?.toString() }\r\n        ],\r\n        temperature: 0.7,\r\n        max_tokens: -1,\r\n        stream: false\r\n      };\r\n      return this.http.post(url, body, { headers: { 'Content-Type': 'application/json' } }).subscribe((object => console.log(object)));\r\n    }\r\n    return null\r\n  }\r\n}",
            "styleUrl": "./editor.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 59,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<angular-editor id=\"editor\" [(ngModel)]=\"htmlContent\" [config]=\"editorConfig\"></angular-editor>\r\n<button class=\"bg-indigo-500 p-2 m-1 text-white rounded hover:drop-shadow-lg duration-500\" (click)=\"performRequest()\">Suggest</button>\r\n<button class=\"bg-indigo-500 p-2 m-1 text-white rounded hover:drop-shadow-lg duration-500\" (click)=\"giveDifferentWording()\">Provide different wording</button>\r\n\r\n<!-- Generate new buttons for: brainstorming ideas, rephrase/rewrite(with options?), Add certain aspects to scene, grammar, spelling and punctuation corrections, Continue writing, \r\n-->\r\n<!-- character creation,location creation,thing creation, categorical creation, song/poem/writing anything  -->\r\n\r\n<!-- Story Bible -> Braindump, Genre, Style, Synopsis, Characters, Outline -->"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-740b1e8f0f1088a75811f39749edf14e1705e8938f92d97bcbb7e693e40caeb3ed1f3c8c7f3933e0d1e648e7228a7a6526d757b562f0f396c717435175575f46",
            "file": "src/app/home/Home.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./Home.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "books",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NavbarComponent",
                    "type": "component"
                },
                {
                    "name": "BookExplorerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { NavbarComponent } from '../navbar/navbar.component';\nimport { BookExplorerComponent } from '../book-explorer/book-explorer.component';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [\n    CommonModule, NavbarComponent, BookExplorerComponent,\n  ],\n  templateUrl: './Home.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HomeComponent {\n  @Input() books: any = []\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-navbar></app-navbar>\n<div class=\"grid grid-cols-10 gap-4 py-10 my-8 mx-10\">\n  <div class=\"col-span-7 col-start-1\">\n    <app-book-explorer></app-book-explorer> \n  </div>\n  <div class=\"col-span-3 bg-white rounded-lg p-6 text-center\">\n    <h2 class=\"text-2xl font-bold mb-4\">AI Writing Assistant</h2>\n    <p class=\"text-lg text-gray-700\">Enhance your writing with AI-driven insights and suggestions.</p>\n  </div>\n</div>\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-9b52ec6963470a3c6916419b04ab27032520f4c251e437b1f639b438ef2847e4170257b1060bcd29f952b2f3a95e7bbfac4d91eeac4c7d1059efcffd5d21c806",
            "file": "src/app/login/login.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "faGoogle",
                    "defaultValue": "faGoogle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "createUserProfile",
                    "args": [
                        {
                            "name": "user",
                            "type": "firebase.User | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "firebase.User | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onGoogleLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onGoogleLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, ChangeDetectorRef } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\nimport firebase from 'firebase/compat/app';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons'\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FontAwesomeModule],\n  templateUrl: './login.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoginComponent {\n  constructor(public authService: AuthService, private firestore: AngularFirestore, private cdr: ChangeDetectorRef) { }\n  faGoogle = faGoogle\n\n  createUserProfile(user: firebase.User | null) {\n    if (user === null) {\n      console.error('User was noone :/');\n      return\n    }\n    const userProfile = {\n      id: user.uid,\n      name: user.displayName,\n      email: user.email,\n      books: {} // Initialize empty books object\n    };\n    return this.firestore.collection('Users').doc(user.uid).set(userProfile);\n  }\n\n  onGoogleLogin() {\n    this.authService.signInWithGoogle().then((result) => {\n      if (result?.additionalUserInfo?.isNewUser) {\n        this?.createUserProfile(result.user);\n      }\n      this.cdr.detectChanges()\n    });\n  }\n\n  onGoogleLogout() {\n    this.authService.signOutGoogle().then(() => {\n      this.cdr.detectChanges()\n    })\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firestore",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firestore",
                        "type": "AngularFirestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "@if(authService.isLoggedIn){\n  <button class=\"text-sm px-6 py-2 bg-opacity-90 bg-gray-50 text-gray-800 rounded-lg shadow hover:bg-gray-200 focus:outline-none transition ease-in-out duration-300\" (click)=\"onGoogleLogout()\">\n    <fa-icon [icon]='faGoogle'></fa-icon>\n    <span class=\"ml-2\">Logout</span>\n  </button>\n} @else {\n  <button class=\"text-sm px-6 py-2 bg-opacity-90 bg-gray-50 text-gray-800 rounded-lg shadow hover:bg-gray-200 focus:outline-none transition ease-in-out duration-300\" (click)=\"onGoogleLogin()\">\n    <fa-icon [icon]='faGoogle'></fa-icon>\n    <span class=\"ml-2\">Login with Google</span>\n  </button>\n}"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-7b993c36f3958859f7d82bdcb31a56e94dcc6e847752e8b0d926c8900f10a24ce5166a3501160adfedde5811ba01e7af0d5a19a3c234ad68b24fc8e1cf46379f",
            "file": "src/app/navbar/navbar.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./navbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "LoginComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [\n    CommonModule, LoginComponent\n  ],\n  templateUrl: './navbar.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavbarComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bg-white text-gray-600 p-4 flex justify-between items-center rounded-b-lg\">\r\n    <div class=\"flex items-center\">\r\n        <span class=\"text-xl font-bold mr-4\"><a href=\"/home\" class=\"hover:text-gray-900 \">PseudoWrite</a></span>\r\n        <nav>\r\n            <ul class=\"flex\">\r\n                <li >\r\n                    <a href=\"/explore\" class=\"flex hover:text-gray-900 px-6 py-4 hover:bg-slate-200 w-full h-full\">Explore</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"/about\" class=\"flex hover:text-gray-900px-6 px-6 py-4 hover:bg-slate-200 w-full h-full\">About</a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n    <app-login></app-login>\r\n</div>\r\n"
        },
        {
            "name": "ProjectChapterComponent",
            "id": "component-ProjectChapterComponent-804e0721650f43dcce1821cc37708e3c793338305eed717d92e0179c3051d99224440704cf04376f4392092da5715dd9eda15707f9d3c71190c45c0c172899c5",
            "file": "src/app/project/project-chapter/project-chapter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-project-chapter",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-chapter.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "file",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "index",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faClone",
                    "defaultValue": "faClone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "faFileExport",
                    "defaultValue": "faFileExport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "faFileLines",
                    "defaultValue": "faFileLines",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "faGripVertical",
                    "defaultValue": "faGripVertical",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "faTrash",
                    "defaultValue": "faTrash",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteFile",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "duplicateFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportFile",
                    "args": [
                        {
                            "name": "file",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "DragDropModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faFileLines, faGripVertical, faTrash, faFileExport, faClone, } from '@fortawesome/free-solid-svg-icons';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\n@Component({\n  selector: 'app-project-chapter',\n  standalone: true,\n  imports: [\n    CommonModule, FontAwesomeModule, DragDropModule\n  ],\n  templateUrl: './project-chapter.component.html',\n})\nexport class ProjectChapterComponent {\n  @Input() file: string = '';\n  @Input() index: number = 0\n  faFileLines = faFileLines\n  faGripVertical = faGripVertical\n  faTrash = faTrash;\n  faFileExport = faFileExport;\n  faClone = faClone;\n\n  deleteFile(index: number): void {\n    // Implement file deletion logic\n  }\n\n  exportFile(file: string): void {\n    // Implement file export logic\n  }\n\n  duplicateFile(file: string): void {\n    // Implement file duplication logic\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div cdkDrag class=\"py-2 px-4 flex justify-between items-center bg-transparent font-semibold hover:bg-slate-200 text-gray-600 hover:text-black rounded hover:shadow-sm\">\n  <div class=\"flex items-center gap-1\" >\n    <button class=\"focus:outline-none\" title=\"Drag File\">\n      <fa-icon [icon]=\"faGripVertical\"></fa-icon>\n    </button>\n    <fa-icon [icon]=\"faFileLines\"></fa-icon>\n    {{ file }}\n  </div>\n  <div class=\"flex items-center gap-2\">\n    <button (click)=\"deleteFile(index)\" title=\"Delete File\" class=\"focus:outline-none\">\n      <fa-icon [icon]=\"faTrash\"></fa-icon>\n    </button>\n    <button (click)=\"exportFile(file)\" title=\"Export File\" class=\"focus:outline-none\">\n      <fa-icon [icon]=\"faFileExport\"></fa-icon>\n    </button>\n    <button (click)=\"duplicateFile(file)\" title=\"Duplicate File\" class=\"focus:outline-none\">\n      <fa-icon [icon]=\"faClone\"></fa-icon>\n    </button>\n  </div>\n</div>\n"
        },
        {
            "name": "ProjectComponent",
            "id": "component-ProjectComponent-c80fc6d70f560f1e7c587634d1d0be65b07ea28c38679a5095ffa08cb8420f8d4305e13e0d00f3bd397b5eb781ba4519b6d6503529c140ebc5352a68f61aefd0",
            "file": "src/app/project/project.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-project",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "files",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "faFolderOpen",
                    "defaultValue": "faFolderOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "onDrop",
                    "args": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "CdkDragDrop<string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                },
                {
                    "name": "DragDropModule",
                    "type": "module"
                },
                {
                    "name": "ProjectTitleComponent",
                    "type": "component"
                },
                {
                    "name": "ProjectChapterComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\nimport { CdkDragDrop, moveItemInArray, DragDropModule } from '@angular/cdk/drag-drop';\nimport { ProjectTitleComponent } from './project-title/project-title.component';\nimport { ProjectChapterComponent } from './project-chapter/project-chapter.component';\n@Component({\n  selector: 'app-project',\n  standalone: true,\n  imports: [\n    CommonModule, FontAwesomeModule, DragDropModule, ProjectTitleComponent, ProjectChapterComponent\n  ],\n  templateUrl: './project.component.html',\n})\nexport class ProjectComponent {\n  @Input() files: string[] = [];\n  faFolderOpen = faFolderOpen\n\n  onDrop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(this.files, event.previousIndex, event.currentIndex);\n    console.log(this.files, event)\n  }\n}\n\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"p-4 border-4 border-gray-300 rounded-lg shadow bg-white opacity-80\">\n  <app-project-title></app-project-title>\n  <div class=\"m-2 flex flex-col border-2 border-gray-200 rounded-lg shadow-md\" cdkDropList (cdkDropListDropped)=\"onDrop($event)\">\n    @for (file of files; track $index) {\n        <app-project-chapter [file]=\"file\" [index]=\"$index\"></app-project-chapter>\n    } @empty {\n      <div class=\"text-center text-gray-600 m-5\">\n        <fa-icon [icon]=\"faFolderOpen\" class=\"text-3xl\"></fa-icon>\n        <p>No files yet. Click \"Add New\" to start!</p>\n      </div>\n    }\n  </div>\n</div>"
        },
        {
            "name": "ProjectTitleComponent",
            "id": "component-ProjectTitleComponent-15551cdb416c98c84b6a2dfa575e9369483ae56dd350a600170c41d1b3b44aceeb74f06b9dd2cee7a5d943ca0b50cbf0a2a5e66070ee78ff99ce6d82f896f8c0",
            "file": "src/app/project/project-title/project-title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-project-title",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./project-title.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "bookName",
                    "defaultValue": "'Book'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "editingTitle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "faBookOpen",
                    "defaultValue": "faBookOpen",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "faFileImport",
                    "defaultValue": "faFileImport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "faPlus",
                    "defaultValue": "faPlus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "originalBookName",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addNewFile",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "importFiles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTitleBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTitleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onTitleEnter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "FontAwesomeModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { faBookOpen, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@Component({\n  selector: 'app-project-title',\n  standalone: true,\n  imports: [\n    CommonModule, FormsModule, FontAwesomeModule\n  ],\n  templateUrl: './project-title.component.html',\n})\nexport class ProjectTitleComponent {\n  @Input() bookName: string = 'Book'\n  editingTitle: boolean = false;\n  originalBookName: string = ''\n  faFileImport = faFileImport;\n  faPlus = faPlus;\n  faBookOpen = faBookOpen\n\n\n  onTitleClick(): void {\n    this.editingTitle = true;\n    this.originalBookName = this.bookName; // Store the original book name\n  }\n\n  onTitleEnter(): void {\n    if (!this.bookName.trim()) {\n      this.bookName = this.originalBookName; // Revert to original name if empty\n    }\n    this.editingTitle = false;\n  }\n\n  onTitleBlur(): void {\n    if (!this.bookName.trim()) {\n      this.bookName = this.originalBookName; // Revert to original name if empty\n    }\n    this.editingTitle = false;\n  }\n\n\n  importFiles(): void {\n    // Implement file import logic here\n  }\n\n  addNewFile(): void {\n    // Implement logic to add a new file\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"flex flex-col items-center mb-6\">\n  <div class=\"flex mb-2\">\n    <fa-icon [icon]=\"faBookOpen\" class=\"text-xl\"></fa-icon>\n    <div *ngIf=\"!editingTitle\" (click)=\"onTitleClick()\" class=\"cursor-pointer\">\n      <p class=\"text-xl font-semibold\">{{ bookName }}</p>\n    </div>\n    <input *ngIf=\"editingTitle\" [(ngModel)]=\"bookName\" (blur)=\"onTitleBlur()\" \n            (keyup.enter)=\"onTitleEnter()\" class=\"form-input border border-gray-300 rounded py-1 px-2 text-lg\">\n  </div>\n  <div class=\"flex gap-1\">\n    <button (click)=\"importFiles()\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-4 rounded flex items-center gap-1\">\n      <fa-icon [icon]=\"faFileImport\" class=\"text-base\"></fa-icon>\n      Import\n    </button>\n    <button (click)=\"addNewFile()\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-1 px-4 rounded flex items-center gap-1\">\n      <fa-icon [icon]=\"faPlus\" class=\"text-base\"></fa-icon>\n      Add New\n    </button>\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    // Provide router for application routes\r\n    provideRouter(routes),\r\n\r\n    // Provide client hydration for Angular Universal (Server-Side Rendering)\r\n    provideClientHydration(),\r\n\r\n    // Import Firebase application initialized with environment-specific configuration\r\n    importProvidersFrom(provideFirebaseApp(() => initializeApp(environment.firebaseConfig))),\r\n\r\n    // Import providers for various Firebase services\r\n    importProvidersFrom(provideAuth(() => getAuth())),\r\n    importProvidersFrom(provideFirestore(() => getFirestore())),\r\n    importProvidersFrom(provideDatabase(() => getDatabase())),\r\n    importProvidersFrom(provideFunctions(() => getFunctions())),\r\n    importProvidersFrom(provideStorage(() => getStorage())),\r\n    { provide: FIREBASE_OPTIONS, useValue: environment.firebaseConfig }\r\n\r\n    // ... include other providers as needed for your application\r\n  ]\r\n}"
            },
            {
                "name": "bootstrap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/main.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => bootstrapApplication(AppComponent, config)"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/about/about.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/background/background.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/book-editor/book-editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BookEditorComponent,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/book-explorer/book-explorer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BookExplorerComponent,\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/home/Home.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/editor/editor.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/navbar/navbar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/project.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ProjectComponent,\r\n  props: {\r\n    files: ['File 1', 'File 2', 'File 3'],\r\n\r\n  },\r\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/book-explorer/book-card/book-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BookCardComponent,\r\n  props: { book: { title: 'Hello' } }\r\n\r\n})"
            },
            {
                "name": "editorConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/editor/editor.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AngularEditorConfig",
                "defaultValue": "{\r\n  editable: true,\r\n  spellcheck: true,\r\n  height: 'calc(100vh - 100px)',\r\n  minHeight: '0',\r\n  maxHeight: 'auto',\r\n  width: 'auto',\r\n  minWidth: '0',\r\n  translate: 'yes',\r\n  enableToolbar: true,\r\n  showToolbar: true,\r\n  placeholder: 'Write Chapter Here...',\r\n  defaultFontName: 'roboto',\r\n  fonts: [\r\n    { class: 'roboto', name: 'Roboto' },\r\n    { class: 'arial', name: 'Arial' },\r\n    { class: 'times-new-roman', name: 'Times New Roman' },\r\n  ],\r\n  sanitize: true,\r\n  toolbarPosition: 'top',\r\n  toolbarHiddenButtons: toolbarHiddenButtons,\r\n}"
            },
            {
                "name": "Empty",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/project/project.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: ProjectComponent,\r\n  props: {\r\n    files: [],\r\n  },\r\n})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.template.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  firebaseConfig: {\r\n    projectId: \"your-production-projectId\",\r\n    appId: \"your-production-appId\",\r\n    databaseURL: \"your-production-databaseURL\",\r\n    storageBucket: \"your-production-storageBucket\",\r\n    apiKey: \"your-production-apiKey\",\r\n    authDomain: \"your-production-authDomain\",\r\n    messagingSenderId: \"your-production-messagingSenderId\",\r\n    measurementId: \"your-production-measurementId\"\r\n  }\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  firebaseConfig: {\r\n    projectId: \"your-production-projectId\",\r\n    appId: \"your-production-appId\",\r\n    databaseURL: \"your-production-databaseURL\",\r\n    storageBucket: \"your-production-storageBucket\",\r\n    apiKey: \"your-production-apiKey\",\r\n    authDomain: \"your-production-authDomain\",\r\n    messagingSenderId: \"your-production-messagingSenderId\",\r\n    measurementId: \"your-production-measurementId\"\r\n  }\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.template.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig: {\r\n    projectId: \"your-dev-projectId\",\r\n    appId: \"your-dev-appId\",\r\n    databaseURL: \"your-dev-databaseURL\",\r\n    storageBucket: \"your-dev-storageBucket\",\r\n    apiKey: \"your-dev-apiKey\",\r\n    authDomain: \"your-dev-authDomain\",\r\n    messagingSenderId: \"your-dev-messagingSenderId\",\r\n    measurementId: \"your-dev-measurementId\"\r\n  }\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCvWDT6ja3EdhL1FnOyitgUO1whXN30XUw\",\r\n    authDomain: \"pseudo-write-dev.firebaseapp.com\",\r\n    databaseURL: \"https://pseudo-write-dev-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"pseudo-write-dev\",\r\n    storageBucket: \"pseudo-write-dev.appspot.com\",\r\n    messagingSenderId: \"813553463399\",\r\n    appId: \"1:813553463399:web:d8bba241cf950c2f7d24c2\",\r\n    measurementId: \"G-S1F5D1JRHV\"\r\n  }\r\n}"
            },
            {
                "name": "ManyBooks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/book-explorer/book-explorer.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BookExplorerComponent,\r\n  props: { books: [{ title: 'Hello' }, { title: 'The beautiful Mermaid' }, { title: 'The Barbarian & The wild woman' }, { title: 'Batman & Not Robin' }, { title: '7 Heralds' }, { title: 'Samanthat & Melf' }, { title: 'Trouble In Hell' }, { title: 'Temporal Tempest' }] }\r\n})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [\r\n        { provide: AuthService, useClass: MockAuthService },\r\n        { provide: AngularFirestore, useClass: MockAngularFirestore },\r\n      ],\r\n    }),\r\n  ],\r\n}"
            },
            {
                "name": "serverConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.server.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n  ]\r\n}"
            },
            {
                "name": "toolbarHiddenButtons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/editor/editor.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  [\r\n    'subscript',\r\n    'superscript',\r\n  ],\r\n  [\r\n    'fontSize',\r\n    'textColor',\r\n    'backgroundColor',\r\n    'customClasses',\r\n    'link',\r\n    'unlink',\r\n    'insertImage',\r\n    'insertVideo',\r\n    'insertHorizontalRule',\r\n    'toggleEditorMode'\r\n  ]\r\n]"
            },
            {
                "name": "WithoutBook",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/book-explorer/book-card/book-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => ({\r\n  component: BookCardComponent,\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    // Provide router for application routes\r\n    provideRouter(routes),\r\n\r\n    // Provide client hydration for Angular Universal (Server-Side Rendering)\r\n    provideClientHydration(),\r\n\r\n    // Import Firebase application initialized with environment-specific configuration\r\n    importProvidersFrom(provideFirebaseApp(() => initializeApp(environment.firebaseConfig))),\r\n\r\n    // Import providers for various Firebase services\r\n    importProvidersFrom(provideAuth(() => getAuth())),\r\n    importProvidersFrom(provideFirestore(() => getFirestore())),\r\n    importProvidersFrom(provideDatabase(() => getDatabase())),\r\n    importProvidersFrom(provideFunctions(() => getFunctions())),\r\n    importProvidersFrom(provideStorage(() => getStorage())),\r\n    { provide: FIREBASE_OPTIONS, useValue: environment.firebaseConfig }\r\n\r\n    // ... include other providers as needed for your application\r\n  ]\r\n}"
                }
            ],
            "src/main.server.ts": [
                {
                    "name": "bootstrap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/main.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => bootstrapApplication(AppComponent, config)"
                }
            ],
            "src/app/app.config.server.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "mergeApplicationConfig(appConfig, serverConfig)"
                },
                {
                    "name": "serverConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.server.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\r\n  providers: [\r\n    provideServerRendering(),\r\n  ]\r\n}"
                }
            ],
            "src/app/about/about.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/about/about.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/background/background.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/background/background.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/book-editor/book-editor.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/book-editor/book-editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BookEditorComponent,\r\n})"
                }
            ],
            "src/app/book-explorer/book-explorer.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/book-explorer/book-explorer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BookExplorerComponent,\r\n})"
                },
                {
                    "name": "ManyBooks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/book-explorer/book-explorer.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BookExplorerComponent,\r\n  props: { books: [{ title: 'Hello' }, { title: 'The beautiful Mermaid' }, { title: 'The Barbarian & The wild woman' }, { title: 'Batman & Not Robin' }, { title: '7 Heralds' }, { title: 'Samanthat & Melf' }, { title: 'Trouble In Hell' }, { title: 'Temporal Tempest' }] }\r\n})"
                }
            ],
            "src/app/home/Home.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/home/Home.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/editor/editor.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/editor/editor.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/navbar/navbar.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/navbar/navbar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({})"
                }
            ],
            "src/app/project/project.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/project.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ProjectComponent,\r\n  props: {\r\n    files: ['File 1', 'File 2', 'File 3'],\r\n\r\n  },\r\n})"
                },
                {
                    "name": "Empty",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/project/project.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: ProjectComponent,\r\n  props: {\r\n    files: [],\r\n  },\r\n})"
                }
            ],
            "src/app/book-explorer/book-card/book-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/book-explorer/book-card/book-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BookCardComponent,\r\n  props: { book: { title: 'Hello' } }\r\n\r\n})"
                },
                {
                    "name": "WithoutBook",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/book-explorer/book-card/book-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => ({\r\n  component: BookCardComponent,\r\n})"
                }
            ],
            "src/app/editor/editor.component.ts": [
                {
                    "name": "editorConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/editor/editor.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AngularEditorConfig",
                    "defaultValue": "{\r\n  editable: true,\r\n  spellcheck: true,\r\n  height: 'calc(100vh - 100px)',\r\n  minHeight: '0',\r\n  maxHeight: 'auto',\r\n  width: 'auto',\r\n  minWidth: '0',\r\n  translate: 'yes',\r\n  enableToolbar: true,\r\n  showToolbar: true,\r\n  placeholder: 'Write Chapter Here...',\r\n  defaultFontName: 'roboto',\r\n  fonts: [\r\n    { class: 'roboto', name: 'Roboto' },\r\n    { class: 'arial', name: 'Arial' },\r\n    { class: 'times-new-roman', name: 'Times New Roman' },\r\n  ],\r\n  sanitize: true,\r\n  toolbarPosition: 'top',\r\n  toolbarHiddenButtons: toolbarHiddenButtons,\r\n}"
                },
                {
                    "name": "toolbarHiddenButtons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/editor/editor.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  [\r\n    'subscript',\r\n    'superscript',\r\n  ],\r\n  [\r\n    'fontSize',\r\n    'textColor',\r\n    'backgroundColor',\r\n    'customClasses',\r\n    'link',\r\n    'unlink',\r\n    'insertImage',\r\n    'insertVideo',\r\n    'insertHorizontalRule',\r\n    'toggleEditorMode'\r\n  ]\r\n]"
                }
            ],
            "src/environments/environment.prod.template.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.template.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  firebaseConfig: {\r\n    projectId: \"your-production-projectId\",\r\n    appId: \"your-production-appId\",\r\n    databaseURL: \"your-production-databaseURL\",\r\n    storageBucket: \"your-production-storageBucket\",\r\n    apiKey: \"your-production-apiKey\",\r\n    authDomain: \"your-production-authDomain\",\r\n    messagingSenderId: \"your-production-messagingSenderId\",\r\n    measurementId: \"your-production-measurementId\"\r\n  }\r\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  firebaseConfig: {\r\n    projectId: \"your-production-projectId\",\r\n    appId: \"your-production-appId\",\r\n    databaseURL: \"your-production-databaseURL\",\r\n    storageBucket: \"your-production-storageBucket\",\r\n    apiKey: \"your-production-apiKey\",\r\n    authDomain: \"your-production-authDomain\",\r\n    messagingSenderId: \"your-production-messagingSenderId\",\r\n    measurementId: \"your-production-measurementId\"\r\n  }\r\n}"
                }
            ],
            "src/environments/environment.template.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.template.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig: {\r\n    projectId: \"your-dev-projectId\",\r\n    appId: \"your-dev-appId\",\r\n    databaseURL: \"your-dev-databaseURL\",\r\n    storageBucket: \"your-dev-storageBucket\",\r\n    apiKey: \"your-dev-apiKey\",\r\n    authDomain: \"your-dev-authDomain\",\r\n    messagingSenderId: \"your-dev-messagingSenderId\",\r\n    measurementId: \"your-dev-measurementId\"\r\n  }\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  firebaseConfig: {\r\n    apiKey: \"AIzaSyCvWDT6ja3EdhL1FnOyitgUO1whXN30XUw\",\r\n    authDomain: \"pseudo-write-dev.firebaseapp.com\",\r\n    databaseURL: \"https://pseudo-write-dev-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"pseudo-write-dev\",\r\n    storageBucket: \"pseudo-write-dev.appspot.com\",\r\n    messagingSenderId: \"813553463399\",\r\n    appId: \"1:813553463399:web:d8bba241cf950c2f7d24c2\",\r\n    measurementId: \"G-S1F5D1JRHV\"\r\n  }\r\n}"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      providers: [\r\n        { provide: AuthService, useClass: MockAuthService },\r\n        { provide: AngularFirestore, useClass: MockAngularFirestore },\r\n      ],\r\n    }),\r\n  ],\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/about/about.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/about/about.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "serverConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/background/background.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BackgroundComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/background/background.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-editor/book-editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookEditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-editor/book-editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-card/book-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-card/book-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-card/book-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutBook",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-explorer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BookExplorerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-explorer.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Book",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-explorer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/book-explorer/book-explorer.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ManyBooks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/editor/editor.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EditorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/editor/editor.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "editorConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/editor/editor.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toolbarHiddenButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/editor/editor.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/home/Home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/home/Home.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/navbar/navbar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project-chapter/project-chapter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectChapterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project-title/project-title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectTitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/project/project.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Empty",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.template.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.template.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/main.server.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "bootstrap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/services/storage-service.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LocalStorageService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}